import com.siukatech.poc.react.backend.plugin.ReactBackendUtil
import org.codehaus.groovy.runtime.GStringImpl

plugins {
//    id 'java'
    id 'application'
//    id 'maven-publish'
    id 'com.siukatech.poc.react-backend-plugin' version '0.0.1-SNAPSHOT'
////    id 'org.springframework.boot' version '3.1.0'
////    id 'io.spring.dependency-management' version '1.1.0'
//    id 'org.springframework.boot' version '3.2.1'
    id 'jacoco'
    id 'org.sonarqube' version '4.0.0.2929'
}

//apply plugin: 'io.spring.dependency-management'

java {
    group = 'com.siukatech.poc'
    version = '0.0.1-SNAPSHOT'
//    sourceCompatibility = '17'
    sourceCompatibility = JavaVersion.VERSION_17
//    sourceCompatibility = JavaVersion.VERSION_21
}

//repositories {
//	mavenCentral()
//}
repositories {
    mavenLocal()
    mavenCentral()
    if (project.hasProperty("platformSnapshotUri")) {
        maven {
            name = 'platformSnapshot'
            allowInsecureProtocol = true
            credentials(PasswordCredentials)
            url = uri("$platformSnapshotUri")
        }
    }
}

//bootJar {
////	exclude('application-a*','x.yml')
//    exclude('application*.properties', 'application*.yml')
//}

// change to pass through parameter rather than coded in build.gradle
// look like only using environment arguments and pass through bootRun's jvmArgs
// https://www.baeldung.com/spring-boot-set-default-timezone
// https://stackoverflow.com/a/25079415
//
//bootRun {
//    println("bootRun - System.getenv: [" + System.getenv("jvmArgs") + "]")
//    println("bootRun - System.getpropertu: [" + System.getProperty("jvmArgs") + "]")
////    def jvmArgsStr = System.getenv("jvmArgs")
//    def jvmArgsStr = System.getProperty("jvmArgs")
//    def jvmArgsList = jvmArgsStr == null? [] : jvmArgsStr.split('\\s+') as List
//    println("bootRun - jvmArgsStr: [" + jvmArgsStr + "], jvmArgsList: [" + jvmArgsList + "]")
//    jvmArgs(
////            ["-Duser.timezone=UTC"]
//            jvmArgsList
//    )
//}

// define react-backend-core version
//def coreProjectVersion = '0.0.1-SNAPSHOT'
ext {
    coreProjectVersion = '0.0.1-SNAPSHOT'
    mapstructVersion = '1.6.0.RC1'
}

dependencies {
    implementation "com.siukatech.poc:react-backend-core:$coreProjectVersion"

//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'org.springframework.boot:spring-boot-starter-web'
//
//	implementation 'org.modelmapper:modelmapper:3.1.1'
//	implementation 'org.hibernate:hibernate-validator:6.0.13.Final'
////	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'

////	implementation 'org.projectlombok:lombok:1.18.26'
//    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
//    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

//    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
//    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    runtimeOnly 'org.postgresql:postgresql:42.7.2'

    testImplementation testFixtures("com.siukatech.poc:react-backend-core:$coreProjectVersion")
//    testAnnotationProcessor testFixtures("com.siukatech.poc:react-backend-core:$coreProjectVersion")

//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.springframework.security:spring-security-test'
//    testImplementation 'com.h2database:h2:2.1.214'

}

// after upgrade to springboot >= 3.2.1
// this can be fixed by update build.gradle or adding maven plugin
// https://stackoverflow.com/a/77691302
// https://github.com/spring-projects/spring-framework/wiki/Upgrading-to-Spring-Framework-6.x#parameter-name-retention
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-parameters")
}

tasks.named('test') {
    useJUnitPlatform()
    // jacoco
    finalizedBy(jacocoTestReport)
}

// jacoco
jacocoTestReport {
    dependsOn(test)
    reports {
        csv.required = false
        html.required = false
        xml.required = true
    }
}
check {
    dependsOn(jacocoTestReport)
}


//// Reference:
//// https://docs.gradle.org/current/userguide/publishing_maven.html
//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            def artifactIdStr = "$project.name"
//            groupId "$project.group"
//            version "$project.version"
//            artifactId "$artifactIdStr"
////			from components.javaPlatform
//            from components.java
//            versionMapping {
//                usage('java-api') {
//                    fromResolutionOf('runtimeClasspath')
//                }
//                usage('java-runtime') {
//                    fromResolutionResult()
//                }
//            }
//            pom {
//                name = "$artifactId"
//                description = "$artifactId"
//            }
//        }
//    }
//}
