server:
  port: 28080

#for plain hibernate
hibernate:
  jdbc:
    time_zone: UTC

spring:
  # This is not working - start
#  mvc:
#    format:
#      date: yyyy-MM-dd
#      date-time: yyyy-MM-dd HH:mm:ss
#      time: HH:mm:ss
  # This is not working - end
  application:
    name: app

  output:
    ansi:
      enabled: always

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        ddl-auto: none
        show-sql: true
        format-sql: true
#        #for Spring boot jpa
#        jdbc:
#          time_zone: UTC

  datasource:
    url: jdbc:postgresql://${db-hostname}/${db-name}
    username: ${db-username}
    #password: ${POSTGRES_PASSWORD:mypass}
    password: ${db-password}
    initialization-mode: always
    initialize: true
    bak-schema: classpath:/schema.sql
    continue-on-error: true

# properties for react-backend-parent
# scope: openid is required to keycloak
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${client-id}
            client-secret: ${client-secret}
            authorization-grant-type: authorization_code
            # write in list (- xxx -yyy) is correct 1
            #scope:
            #  - openid
            #  - profile
            #  - email
            # write in comma (xxx,yyy) is correct 2
            scope: openid,profile,email
            #scope: openid
            # write in double quote with comma ("xxx,yyy") is correct 3
            #scope: "openid,profile,email"
            # write in double quote with comma ("xxx+yyy") is wrong 1
            #scope: "openid+profile+email"
            # write in double quote with comma ("xxx yyy") is wrong 2
            #scope: "openid profile email"
            redirect-uri: ${oauth2-client-redirect-uri}

        provider:
          keycloak:
            authorization-uri: ${oauth2-client-keycloak}/realms/${client-realm}/protocol/openid-connect/auth
            token-uri: ${oauth2-client-keycloak}/realms/${client-realm}/protocol/openid-connect/token
            user-info-uri: ${oauth2-client-keycloak}/realms/${client-realm}/protocol/openid-connect/userinfo
            issuer-uri: ${oauth2-client-keycloak}/realms/${client-realm}
            jwk-set-uri: ${oauth2-client-keycloak}/realms/${client-realm}/protocol/openid-connect/certs
            user-name-attribute: preferred_username
#            user-info-authentication-method:

      resource-server:
        jwt:
          issuer-uri: ${oauth2-client-keycloak}/realms/${client-realm}

#  # Doesnt work for java 8 date types
#  jackson:
#    date-format: 'yyyy-MM-ddTHH:mm:ss.sssZ'
#    serialization:
#      write_dates_as_timestamps: false


management:
  endpoints:
    web:
      exposure:
        include: '*'
  tracing:
    sampling:
      probability: 1.0
  metrics:
    distribution:
      percentiles-histogram:
        greeting: true
        http:
          server:
            requests: true


app:
  app-mid: backend-app
  # configuration for remote user service
  host-name: http://localhost:28081
  api:
    my-user-info: /v1/protected/my/user-info
    my-key-info: /v1/protected/my/key-info
    my-user-permission-info: /v1/protected/my/user-permission-info
  # configuration for database user service
#  host-name: http://localhost:28080
#  api:
#    my-key-info: /v1/protected/my/key-info
##    my-user-info: /v1/protected/my/user-info
##    my-user-permission-info: /v1/protected/my/user-permission-info


logging:
#  pattern:
##    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
#    level: "%5p [${spring.application.name:}-%X{traceId:-}-%X{spanId:-}]"
  level:
#    root: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.orm.jdbc.bind: TRACE
    org.springframework.jdbc.core.JdbcTemplate: DEBUG
    org.springframework.jdbc.core.StatementCreatorUtils: TRACE
#    org.springframework.web: TRACE
    org.springframework.security: TRACE
    org.springframework.http.client: TRACE
    org.springframework.web.servlet.DispatcherServlet: DEBUG
    com.siukatech.poc.react.backend.parent: TRACE
    com.siukatech.poc.react.backend.parent.web: TRACE
    com.siukatech.poc.react.backend.app: DEBUG
    com.siukatech.poc.react.backend.app.web: TRACE
    com.siukatech.poc.react.backend.parent.security.interceptor: DEBUG

